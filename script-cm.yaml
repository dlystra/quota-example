apiVersion: v1
kind: ConfigMap
metadata:
  name: quota-script-cm
  namespace: cronjobs
data:
  apply-quotas.sh: |
    #!/bin/bash
    set -eo pipefail

    SUFFIX="devspaces"
    EXCLUDE_PROJECT="openshift-devspaces"
    QUOTA_NAME="cpu-memory-quota"
    QUOTA_TEMPLATE="cpu-memory-quota-template"
    LIMITRANGE_NAME="project-resource-limits"
    LIMITRANGE_TEMPLATE="limitrange-template"
    TEMPLATE_NAMESPACE="cronjobs"

    echo "--- STARTING SCRIPT ---"
    echo "Processing projects with suffix: $SUFFIX"
    echo "Excluding project: $EXCLUDE_PROJECT"
    echo "Template Namespace: $TEMPLATE_NAMESPACE"

    PROJECTS=$(oc get projects --no-headers -o custom-columns=":metadata.name" | grep "${SUFFIX}$" | grep -v "^${EXCLUDE_PROJECT}$")

    if [[ -z "$PROJECTS" ]]; then
      echo "No projects with suffix '${SUFFIX}' found (after exclusions). Exiting."
      exit 0
    fi

    echo "Found the following target projects:"
    echo "$PROJECTS"
    echo "---"

    for project in $PROJECTS; do
      echo "=== Inspecting project: $project ==="
      
      echo "Checking for ResourceQuota: $QUOTA_NAME"
      if oc get resourcequota "$QUOTA_NAME" -n "$project" &>/dev/null; then
        echo "Quota '$QUOTA_NAME' already exists in $project. Skipping."
      else
        echo "Applying quota '$QUOTA_NAME' to $project..."
        oc process "$QUOTA_TEMPLATE" -n "$TEMPLATE_NAMESPACE" -p NAMESPACE="$project" | oc apply -f -
        if [[ $? -eq 0 ]]; then
            echo "Successfully applied quota to $project."
        else
            echo "Failed to apply quota to $project."
        fi
      fi

      echo "Checking for LimitRange: $LIMITRANGE_NAME"
      if oc get limitrange "$LIMITRANGE_NAME" -n "$project" &>/dev/null; then
        echo "LimitRange '$LIMITRANGE_NAME' already exists in $project. Skipping."
      else
        echo "Applying LimitRange '$LIMITRANGE_NAME' from '$LIMITRANGE_TEMPLATE' to $project..."
        oc process "$LIMITRANGE_TEMPLATE" -n "$TEMPLATE_NAMESPACE" -p NAMESPACE="$project" | oc apply -f -
        if [[ $? -eq 0 ]]; then
            echo "Successfully applied LimitRange to $project."
        else
            echo "Failed to apply LimitRange to $project."
        fi
      fi

      echo "---"
    done

    echo "Script finished."